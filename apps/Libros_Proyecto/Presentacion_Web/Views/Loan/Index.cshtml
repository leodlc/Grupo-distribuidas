@model IEnumerable<Data.PRESTAMO>

@Html.Partial("_NavBar")

@{
    ViewBag.Title = "Lista de Préstamos";
}

<div class="content-wrapper">
    <div class="text-center mb-3">
        <h2>Préstamos Registrados</h2>
        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#createModal">Agregar Préstamo</button>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover table-bordered text-center">
            <thead class="thead-dark">
                <tr>
                    <th>Cliente</th>
                    <th>Libro</th>
                    <th>Fecha Inicio</th>
                    <th>Fecha Fin</th>
                    <th>Descripción</th>
                    <th>Estado</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var prestamo in Model)
                {
                    <tr>
                        <td data-idcliente="@prestamo.IDCLIENTE" class="cliente-name"></td>
                        <td data-idlibro="@prestamo.IDLIBRO" class="libro-name"></td>
                        <td>@(prestamo.FECHAINIPREST?.ToString("yyyy-MM-dd") ?? "")</td>
                        <td>@(prestamo.FECHAFINPREST?.ToString("yyyy-MM-dd") ?? "")</td>
                        <td>@prestamo.DESCRPREST</td>
                        <td>
                            @{
                                bool estado = prestamo.ESTADOPREST ?? false;
                                string estadoTexto = estado ? "Activo" : "Finalizado";
                            }
                            @estadoTexto
                        </td>
                        <td>
                            <div class="actions-container">
                                <a class="btn btn-outline-success btn-outline-success-custom"
                                   href="@Url.Action("DetallePrestamo", "Loan", new { idCliente = prestamo.IDCLIENTE, idLibro = prestamo.IDLIBRO })">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button type="button" class="btn btn-outline-dark delete-button" data-idcliente="@prestamo.IDCLIENTE" data-idlibro="@prestamo.IDLIBRO" data-toggle="modal" data-target="#deleteModal">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Modal para Crear -->
    <div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="createModalLabel">Crear Préstamo</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @Html.Partial("_CrearPrestamoForm", new Data.PRESTAMO())
                    @Html.AntiForgeryToken()
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal para Eliminar -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="deleteModalLabel">Confirmar Eliminación</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                ¿Estás seguro de que deseas eliminar este préstamo?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Eliminar</button>
            </div>
        </div>
    </div>
</div>

<!-- Agrega jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Agrega los scripts de Bootstrap -->
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
    $(document).ready(function () {
        var idCliente, idLibro;

        // Cuando se hace clic en el botón de eliminar, almacena los IDs en variables
        $('.delete-button').on('click', function () {
            idCliente = $(this).data('idcliente');
            idLibro = $(this).data('idlibro');
        });

        // Cuando se confirma la eliminación en el modal
        $('#confirmDelete').on('click', function () {
            var token = $('input[name="__RequestVerificationToken"]').val();

            $.ajax({
                url: 'http://localhost:54845/api/loan/Delete/' + idCliente + '/' + idLibro,
                type: 'DELETE',
                data: {
                    idCliente: idCliente,
                    idLibro: idLibro,
                    __RequestVerificationToken: token
                },
                success: function (data) {
                    if (data.success) {
                        // Si la eliminación es exitosa, cierra el modal y elimina la fila de la tabla
                        $('#deleteModal').modal('hide');
                        $('button[data-idcliente="' + idCliente + '"][data-idlibro="' + idLibro + '"]').closest('tr').remove();
                    } else {
                        alert('Eliminado con exito');
                        location.reload();
                    }
                },
                error: function () {
                    alert('Error al eliminar el préstamo.');
                }
            });
        });

        cargarNombresClientes();
        cargarNombresLibros();
        addValidationScripts();
    });

    function cargarNombresClientes() {
        $('.cliente-name').each(function () {
            var clienteId = $(this).data('idcliente');
            var element = $(this);
            $.ajax({
                url: 'http://localhost:54845/api/client/getbyid/' + clienteId,
                type: 'GET',
                success: function (data) {
                    element.text(data.NOMBRECLIENTE + ' ' + data.APELLIDOCLIENTE);
                },
                error: function () {
                    element.text('Cliente no encontrado');
                }
            });
        });
    }

    function cargarNombresLibros() {
        $('.libro-name').each(function () {
            var libroId = $(this).data('idlibro');
            var element = $(this);
            $.ajax({
                url: 'http://localhost:54845/api/book/GetById/' + libroId,
                type: 'GET',
                success: function (data) {
                    element.text(data.NOMBRELIBRO);
                },
                error: function () {
                    element.text('Libro no encontrado');
                }
            });
        });
    }

    function addValidationScripts() {
        $('#createModal #DESCRPREST').keypress(function (e) {
            var charCode = e.which;
            // Permite letras, números, espacios, comillas y comas
            if ((charCode >= 65 && charCode <= 90) || // Letras mayúsculas
                (charCode >= 97 && charCode <= 122) || // Letras minúsculas
                (charCode >= 48 && charCode <= 57) || // Números
                charCode == 32 || // Espacio
                charCode == 34 || // Comillas dobles (")
                charCode == 44) { // Coma (,)
                return true;
            } else {
                return false;
            }
        });
    }
</script>
